cache:
  paths:
    - node_modules/

image: node:16.13.0

variables:
  PROJECT_NAME: "growing-tree"
  PROJECT_HOST: "growing-tree.acres.cn"  # 项目域名
  PROJECT_HOST_TEST: "growing-tree.acres.cn"  # 项目测试域名
  APP_NAME: "${PROJECT_NAME}-web"
  APP_NAME_TEST: "${PROJECT_NAME}-web-test"
  ALI_DOCKER_REGISTRY_HOST: 'registry-vpc.cn-shenzhen.aliyuncs.com'
  ALI_DOCKER_REGISTRY_NAMESPACE: 'readboy_zs'
  ALI_DOCKER_IMAGE: '${ALI_DOCKER_REGISTRY_HOST}/${ALI_DOCKER_REGISTRY_NAMESPACE}/${APP_NAME}'
  ALI_DOCKER_TEST_IMAGE: '${ALI_DOCKER_REGISTRY_HOST}/${ALI_DOCKER_REGISTRY_NAMESPACE}/${APP_NAME_TEST}'
  OSS_ADDRESS: 'oss://acres/hub/web/${APP_NAME}/'
  OSS_ADDRESS_TEST: 'oss://acres/hub/web/${APP_NAME_TEST}/'
  K8S_TEST_NAMESPACE: "gitlab"
  K8S_NAMESPACE: "production"
  K8S_CONTAINER_PORT: 80
  


stages:
  - build
  - upload
  - build-image
  - deploy


# 打包前端文件
master-build:
  stage: build
  rules:
    - if: $CI_COMMIT_TAG
      variables:
        DREAMENV: PROD
        BUILDOMDE: ''
    - if: $CI_COMMIT_BRANCH == "test" 
      variables:
        DREAMENV: TEST
        BUILDOMDE: ':local'
  script:
    - yarn config set registry https://registry.npm.taobao.org --global
    - yarn install
    - yarn build${BUILDOMDE}
  artifacts:
    expire_in: 1 week
    paths:
      - dist




upload:
  stage: upload
  image: "registry-vpc.cn-shenzhen.aliyuncs.com/readboy_zs/ossutil:1.7.13-alpine"
  rules:
    - if: $CI_COMMIT_BRANCH == "test" || $CI_COMMIT_BRANCH == "temp-online"
      variables:
        OSS_SRC: $OSS_ADDRESS_TEST
    - if: $CI_COMMIT_TAG
      variables:
        OSS_SRC: $OSS_ADDRESS
  script:
    - ossutil config -e oss-cn-shenzhen-internal.aliyuncs.com -i $ACCESS_KEY_ID -k $ACCESS_KEY_SECRET -L CH -c ./myconfig
    - ossutil sync ./dist $OSS_SRC -f -c ./myconfig



master-image:
  stage: build-image
  image: docker:latest
  script:
    - docker login -u $ALI_DOCKER_REGISTRY_USER -p $ALI_DOCKER_REGISTRY_PWD $ALI_DOCKER_REGISTRY_HOST
    - docker build --build-arg GIN_MODE=release -t $ALI_DOCKER_IMAGE:$CI_COMMIT_TAG -t $ALI_DOCKER_IMAGE:latest -f build/docker/Dockerfile . 
    - docker push $ALI_DOCKER_IMAGE:$CI_COMMIT_TAG
    - docker push $ALI_DOCKER_IMAGE:latest
  only:
    - tags

master-image-test:
  stage: build-image
  image: docker:latest
  rules:
    - if: $CI_COMMIT_BRANCH == "test" 
  script:
    - docker login -u $ALI_DOCKER_REGISTRY_USER -p $ALI_DOCKER_REGISTRY_PWD $ALI_DOCKER_REGISTRY_HOST
    - docker build --build-arg GIN_MODE=test -t $ALI_DOCKER_TEST_IMAGE:$CI_COMMIT_BRANCH -f build/docker/Dockerfile . 
    - docker push $ALI_DOCKER_TEST_IMAGE:$CI_COMMIT_BRANCH
  # only:
  #   - test



k8s-deploy-test-job:
  stage: deploy
  dependencies: []
  image: '${ALI_DOCKER_REGISTRY_HOST}/${ALI_DOCKER_REGISTRY_NAMESPACE}/kubectl:1.25.0-alpine'
  rules:
    - if: $CI_COMMIT_BRANCH == 'test' || $CI_COMMIT_BRANCH == "temp-online"
  before_script:
    - mkdir -p ~/.kube
    - echo $RD_KUBE_CONFIG_TEST | base64 -d > ~/.kube/config
  script:
    - sed -i "s|---IMAGE---|${ALI_DOCKER_TEST_IMAGE}:${CI_COMMIT_BRANCH}|" kubernetes/k8s-test.yml
    - sed -i "s/---APP_NAME---/${APP_NAME_TEST}/" kubernetes/k8s-test.yml
    - sed -i "s/---NAMESPACE---/${K8S_TEST_NAMESPACE}/" kubernetes/k8s-test.yml
    - sed -i "s/---PORT---/${K8S_CONTAINER_PORT}/" kubernetes/k8s-test.yml
    - sed -i "s/---HOST---/${PROJECT_HOST_TEST}/" kubernetes/k8s-test.yml
    - KUBECONFIG=~/.kube/config kubectl apply -f kubernetes/k8s-test.yml
    - KUBECONFIG=~/.kube/config kubectl -n $K8S_TEST_NAMESPACE rollout restart deployment/$APP_NAME_TEST   # 重复tag，需要重新部署




k8s-deploy-job:
  stage: deploy
  dependencies: []
  image: '${ALI_DOCKER_REGISTRY_HOST}/${ALI_DOCKER_REGISTRY_NAMESPACE}/kubectl:1.25.0-alpine'
  rules:
    - if: $CI_COMMIT_TAG
      variables:
        IMAGE_TAG: '$CI_COMMIT_TAG'
    - if: $CI_COMMIT_BRANCH == "master"
      changes:
        - kubernetes/k8s.yml
      variables:
        IMAGE_TAG: 'latest'
  before_script:
    - mkdir -p ~/.kube
    - echo $RD_KUBE_CONFIG | base64 -d > ~/.kube/config
  script:
    - sed -i "s|---IMAGE---|${ALI_DOCKER_IMAGE}:${IMAGE_TAG}|" kubernetes/k8s.yml
    - sed -i "s/---APP_NAME---/${APP_NAME}/" kubernetes/k8s.yml
    - sed -i "s/---NAMESPACE---/${K8S_NAMESPACE}/" kubernetes/k8s.yml
    - sed -i "s/---PORT---/${K8S_CONTAINER_PORT}/" kubernetes/k8s.yml
    - sed -i "s/---HOST---/${PROJECT_HOST}/" kubernetes/k8s.yml
    - KUBECONFIG=~/.kube/config kubectl apply -f kubernetes/k8s.yml

